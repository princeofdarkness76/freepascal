#
<<<<<<< HEAD
<<<<<<< HEAD
#   Makefile.fpc for running fpmake
=======
#   Makefile.fpc for WinUnits
>>>>>>> graemeg/fixes_2_2
=======
#   Makefile.fpc for WinUnits
>>>>>>> origin/fixes_2_2
#

[package]
name=winunits-jedi
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
version=3.1.1

[require]
packages=rtl fpmkunit
=======
version=2.5.1

[require]
=======
version=2.5.1

[require]
>>>>>>> graemeg/cpstrnew
=======
version=2.5.1

[require]
>>>>>>> graemeg/cpstrnew
=======
version=2.5.1

[require]
>>>>>>> origin/cpstrnew
packages_win32=winunits-base fcl-registry fcl-base
packages_win64=winunits-base fcl-registry fcl-base
=======
=======
>>>>>>> origin/fixes_2_2
version=2.2.5

[require]
packages_win32=winunits-base
packages_win64=winunits-base
<<<<<<< HEAD
>>>>>>> graemeg/fixes_2_2
=======
>>>>>>> origin/fixes_2_2
=======
version=2.5.1

[require]
packages_win32=winunits-base fcl-registry fcl-base
packages_win64=winunits-base fcl-registry fcl-base
>>>>>>> origin/cpstrnew

[target]
units=buildjwa
implicitunits= jwawintype jwawinbase jwawinnt \
 jwalmerr jwalmmsg jwaaclui jwaadsdb jwalmerrlog jwalmjoin jwaauthz  \
 jwabits jwalmremutl jwalmrepl jwalmserver jwalmshare jwalmsname \
 jwalmstats jwaaccctrl jwaaclapi jwacderr jwacpl jwaactiveds jwadbt jwadde \
 jwaadserr jwaadshlp jwaadsnms jwaadsprop jwaadssts jwaadtgen \
 jwaaf_irda jwaatalkwsh jwaauthif jwadlgs jwadssec jwabatclass \
 jwaexcpt jwaime jwabits1_5 jwabitscfg jwabitsmsg jwablberr \
 jwabluetoothapis jwabthdef jwabthsdpdef jwabugcodes jwalmat jwalmsvc \
 jwacmnquery jwacolordlg jwalmuse jwamsi jwacplext jwacryptuiapi \
 jwanb30 jwanetsh jwapbt jwapdh jwadhcpcsdk jwadhcpsapi jwadhcpssdk \
 jwaprsht jwapsapi jwadsadmin jwadsclient jwadsgetdc jwadskquota \
 jwadsquery jwadsrole jwaqos jwaqossp jwaerrorrep jwarpc jwasddl \
 jwafaxdev jwafaxext jwafaxmmc jwafaxroute jwagpedit jwahherror \
 jwahtmlguid jwahtmlhelp jwaiaccess jwaiadmext jwaicmpapi jwaiiscnfg \
 jwaimagehlp jwalmdfs jwaimapierror jwasens jwasfc jwaioevent \
 jwaipexport jwaiphlpapi jwaipifcons jwaipinfoid jwaiprtrmib \
 jwaiptypes jwaisguids jwaissper16 jwalmaccess jwalmalert jwalmapibuf \
 jwasnmp jwasspi jwalmaudit jwalmconfig jwalmcons jwawpapi \
 jwawsipx jwawsrm jwalmuseflg jwalmwksta jwaloadperf jwalpmapi \
 jwamciavi jwamprerror jwawsvns jwaimapi jwamsidefs jwamsiquery \
 jwamstask jwamstcpip jwamswsock jwanspapi jwantddpar jwantdsapi \
 jwantdsbcli jwantdsbmsg jwantldap jwantquery jwantsecapi jwantstatus \
 jwaobjsel jwapatchapi jwapatchwiz jwapdhmsg jwapowrprof jwaprofinfo \
 jwaprotocol jwaqosname jwaqospol jwareason jwaregstr jwarpcasync \
 jwarpcdce jwarpcnsi jwarpcnterr jwarpcssl jwascesvc jwaschedule \
 jwaschemadef jwasecext jwasecurity jwasensapi jwashlguid jwasisbkup \
 jwasporder jwasrrestoreptapi jwasubauth jwasvcguid jwatlhelp32 \
 jwatmschema jwatraffic jwauserenv jwauxtheme jwawbemcli jwawinable \
 jwawinber jwawincon jwawincpl jwawincred jwawincrypt \
 jwawindns jwawinefs jwawinerror jwawinfax jwawingdi jwawinioctl \
 jwawinldap jwawinnetwk jwawinnls jwawinperf jwawinreg jwawinresrc \
 jwawinsafer jwawinsock jwawinsock2 jwawinsvc jwawinuser \
 jwawinver jwawinwlx jwawmistr jwawownt16 jwawownt32 jwawpapimsg \
 jwawpcrsmsg jwawpftpmsg jwawppstmsg jwawpspihlp jwawptypes \
 jwawpwizmsg jwaws2atm jwaws2bth jwaws2dnet jwaws2spi jwaws2tcpip \
 jwawshisotp jwawsnetbs jwawsnwlink jwawtsapi32 jwazmouse jwasensevts \
 jwaadstlb jwanative jwawindows jwacarderr jwaactivex \
 jwawindllnames jwawinternl jwawinsta jwavista


examples=examples

rsts = jwawintype 
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> graemeg/cpstrnew

[install]
=======

[install]
buildunit=buildjwa
>>>>>>> graemeg/fixes_2_2
=======

[install]
buildunit=buildjwa
>>>>>>> origin/fixes_2_2
fpcpackage=y

[default]
fpcdir=../..

<<<<<<< HEAD
<<<<<<< HEAD
[prerules]
FPMAKE_BIN_CLEAN=$(wildcard ./fpmake$(SRCEXEEXT))
ifdef OS_TARGET
FPC_TARGETOPT+=--os=$(OS_TARGET)
endif
ifdef CPU_TARGET
FPC_TARGETOPT+=--cpu=$(CPU_TARGET)
endif
LOCALFPMAKE=./fpmake$(SRCEXEEXT)

[rules]
# Do not pass the Makefile's unit and binary target locations. Fpmake uses it's own.
override FPCOPT:=$(filter-out -FU%,$(FPCOPT))
override FPCOPT:=$(filter-out -FE%,$(FPCOPT))
# Do not pass the package-unitdirectories. Fpmake adds those and this way they don't apear in the .fpm
override FPCOPT:=$(filter-out $(addprefix -Fu,$(COMPILER_UNITDIR)),$(FPCOPT))# Compose general fpmake-parameters
# Compose general fpmake-parameters
ifdef FPMAKEOPT
FPMAKE_OPT+=$(FPMAKEOPT)
endif
FPMAKE_OPT+=--localunitdir=../..
FPMAKE_OPT+=--globalunitdir=..
FPMAKE_OPT+=$(FPC_TARGETOPT)
FPMAKE_OPT+=$(addprefix -o ,$(FPCOPT))
FPMAKE_OPT+=--compiler=$(FPC)
FPMAKE_OPT+=-bu
.NOTPARALLEL:

fpmake$(SRCEXEEXT): fpmake.pp
	$(FPCFPMAKE) fpmake.pp $(FPMAKE_SKIP_CONFIG) $(addprefix -Fu,$(COMPILER_FPMAKE_UNITDIR)) $(FPCMAKEOPT) $(OPT)
all:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) compile $(FPMAKE_OPT)
smart:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) compile $(FPMAKE_OPT) -o -XX -o -CX
release:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) compile $(FPMAKE_OPT) -o -dRELEASE
debug:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) compile $(FPMAKE_OPT) -o -dDEBUG
# If no fpmake exists and (dist)clean is called, do not try to build fpmake, it will
# most often fail because the dependencies are cleared.
# In case of a clean, simply do nothing
ifeq ($(FPMAKE_BIN_CLEAN),)
clean:
else
clean:
	$(FPMAKE_BIN_CLEAN) clean $(FPMAKE_OPT)
endif
# In case of a distclean, perform an 'old'-style distclean. This to avoid problems
# when the package is compiled using fpcmake prior to running this clean using fpmake
ifeq ($(FPMAKE_BIN_CLEAN),)
distclean:	$(addsuffix _distclean,$(TARGET_DIRS)) fpc_cleanall
else
distclean:
ifdef inUnix
        { $(FPMAKE_BIN_CLEAN) distclean $(FPMAKE_OPT); if [ $$? != "0" ]; then { echo Something wrong with fpmake exectable. Remove the executable and call make recursively to recover.; $(DEL) $(FPMAKE_BIN_CLEAN); $(MAKE) fpc_cleanall; }; fi;  }
else
        $(FPMAKE_BIN_CLEAN) distclean $(FPMAKE_OPT)
endif
	-$(DEL) $(LOCALFPMAKE)
endif
cleanall: distclean
install:	fpmake$(SRCEXEEXT)
ifdef UNIXHier
	$(LOCALFPMAKE) install $(FPMAKE_OPT) --prefix=$(INSTALL_PREFIX) --baseinstalldir=$(INSTALL_LIBDIR)/fpc/$(FPC_VERSION) --unitinstalldir=$(INSTALL_UNITDIR)
else
	$(LOCALFPMAKE) install $(FPMAKE_OPT) --prefix=$(INSTALL_BASEDIR) --baseinstalldir=$(INSTALL_BASEDIR) --unitinstalldir=$(INSTALL_UNITDIR)
endif
# distinstall also installs the example-sources and omits the location of the source-
# files from the fpunits.cfg files.
distinstall:	fpmake$(SRCEXEEXT)
ifdef UNIXHier
	$(LOCALFPMAKE) install $(FPMAKE_OPT) --prefix=$(INSTALL_PREFIX) --baseinstalldir=$(INSTALL_LIBDIR)/fpc/$(FPC_VERSION) --unitinstalldir=$(INSTALL_UNITDIR) -ie -fsp 0
else
	$(LOCALFPMAKE) install $(FPMAKE_OPT) --prefix=$(INSTALL_BASEDIR) --baseinstalldir=$(INSTALL_BASEDIR) --unitinstalldir=$(INSTALL_UNITDIR) -ie -fsp 0
endif
zipinstall:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) zipinstall $(FPMAKE_OPT) --zipprefix=$(DIST_DESTDIR)/$(ZIPPREFIX)
zipdistinstall:	fpmake$(SRCEXEEXT)
	$(LOCALFPMAKE) zipinstall $(FPMAKE_OPT) --zipprefix=$(DIST_DESTDIR)/$(ZIPPREFIX) -ie -fsp 0
zipsourceinstall:	fpmake$(SRCEXEEXT)
ifdef UNIXHier
	$(LOCALFPMAKE) archive $(FPMAKE_OPT) --zipprefix=$(DIST_DESTDIR)/$(ZIPPREFIX) --prefix=share/src/fpc-\$$\(PACKAGEVERSION\)/$(INSTALL_FPCSUBDIR)/\$$\(PACKAGEDIRECTORY\)
else
	$(LOCALFPMAKE) archive $(FPMAKE_OPT) --zipprefix=$(DIST_DESTDIR)/$(ZIPPREFIX) --prefix=source\\$(INSTALL_FPCSUBDIR)\\\$$\(PACKAGEDIRECTORY\)
endif
=======
=======
>>>>>>> origin/fixes_2_2
[compiler]
options=-Ur
sourcedir=src
includedir=src
unitdir=units

[rules]
.NOTPARALLEL:
<<<<<<< HEAD
>>>>>>> graemeg/fixes_2_2
=======
>>>>>>> origin/fixes_2_2
